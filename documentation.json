{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c3df0bbfc3280f1b04da8df61a519ebe6881f9779aea2a5a4fd75bbf4f2d3dc8bd22a90d978b31c88cdfbfebaa3d38b1372198bb8918abaf8ee64a28f0ee9d47",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'nm-storybook'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nm-storybook';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nm-button title=\"eree\"></nm-button>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d0bada3d1dadf0688771293e5c7abc0bb255c28f0b1962070362b50f8afdcff79e17454bf2f1ca3900b70f03ae02c1b5e9d216caf6b9f1b589cd7e7d757d2ae9",
            "file": "src/app/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nm-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "singleIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "ButtonSizeEnum.Medium",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ButtonSizeEnum",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "ButtonThemeEnum.Primary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ButtonThemeEnum",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "btnClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ButtonSizeEnum, ButtonThemeEnum } from '@components/button/button.enum';\n\n@Component({\n  selector: 'nm-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent {\n  @Input() theme: ButtonThemeEnum = ButtonThemeEnum.Primary;\n  @Input() size: ButtonSizeEnum = ButtonSizeEnum.Medium;\n  @Input() disabled?: boolean;\n  @Input() loading?: boolean;\n  @Input() singleIcon?: boolean;\n\n  @Output() btnClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    let classes = ['nm-btn', `nm-btn_${this.theme}`, `nm-btn_${this.size}`];\n\n    if (!!this.singleIcon) {\n      classes = [...classes, 'nm-btn_single-icon'];\n    }\n\n    if (!!this.disabled) {\n      classes = [...classes, 'nm-btn_disabled'];\n    }\n\n    if (!!this.loading) {\n      classes = [...classes, 'nm-btn_loading'];\n    }\n\n    return classes;\n  }\n}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"mixins/nm-button\" as btn;\r\n\r\n.nm-btn {\r\n  @include btn.button-base;\r\n}\r\n\r\n.nm-btn_large {\r\n  @include btn.size(large);\r\n\r\n  &.nm-btn_single-icon {\r\n    @include btn.size-icon(large);\r\n  }\r\n}\r\n\r\n.nm-btn_medium {\r\n  @include btn.size(medium);\r\n\r\n  &.nm-btn_single-icon {\r\n    @include btn.size-icon(medium);\r\n  }\r\n}\r\n\r\n.nm-btn_small {\r\n  @include btn.size(small);\r\n\r\n  &.nm-btn_single-icon {\r\n    @include btn.size-icon(small);\r\n  }\r\n}\r\n\r\n.nm-btn_primary {\r\n  @include btn.theme(primary);\r\n}\r\n\r\n.nm-btn_secondary {\r\n  @include btn.theme(secondary);\r\n}\r\n\r\n.nm-btn_tertiary {\r\n  @include btn.theme(tertiary);\r\n}\r\n\r\n.nm-btn_border-accent {\r\n  @include btn.theme(border-accent);\r\n}\r\n\r\n.nm-btn_blue-accent {\r\n  @include btn.theme(blue-accent);\r\n}\r\n\r\n.nm-btn_success {\r\n  @include btn.theme(success);\r\n}\r\n\r\n.nm-btn_danger {\r\n  @include btn.theme(danger);\r\n}\r\n\r\n.nm-btn_invert-primary {\r\n  @include btn.theme(invert-primary);\r\n}\r\n\r\n.nm-btn_disabled {\r\n  @include btn.disabled;\r\n}\r\n\r\n.nm-btn_loading {\r\n  @include btn.loading;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 19
                    }
                }
            },
            "templateData": "<button [class]=\"classes\">\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "TaskComponent",
            "id": "component-TaskComponent-87839ab40361ff54d2b860c49b2e3fe1c324d2fb3823cbe9d8a8ea61c433bb6de8eff19b783aa47b37512dd622a0499158cc713ecd3ee11afec7a1d11c1a054a",
            "file": "src/app/components/task/task.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-task",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"list-item\">\n    <label [attr.aria-label]=\"task.title + ''\" for=\"title\">\n        <input\n                type=\"text\"\n                [value]=\"task.title\"\n                readonly=\"true\"\n                id=\"title\"\n                name=\"title\"\n        />\n    </label>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "task",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe shape of the task object\n",
                    "description": "<p>The shape of the task object</p>\n",
                    "line": 23,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onArchiveTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "onPinTask",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  template: `\r\n      <div class=\"list-item\">\r\n          <label [attr.aria-label]=\"task.title + ''\" for=\"title\">\r\n              <input\r\n                      type=\"text\"\r\n                      [value]=\"task.title\"\r\n                      readonly=\"true\"\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n              />\r\n          </label>\r\n      </div>\r\n  `,\r\n})\r\nexport default class TaskComponent {\r\n  /**\r\n   * The shape of the task object\r\n   */\r\n  @Input() task: any;\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onPinTask = new EventEmitter<Event>();\r\n\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output()\r\n  onArchiveTask = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-17f16340d78e965285b760e2245cc38884e4f6daae6f969e042e462707f11c4af45b64633291dab774070970ba6b9910ba47aad380a0b05de471fb57da2bb7a4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ButtonModule } from '@app/components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ButtonModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-25c983dc00a0af95a1c70ead1793a92584b39d6d36fe51bc4b707de145884f1c45f2ed67a1247ad2e18850490824f31b0c7951e8fc61b67eed9fc2a1212817e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\n\n\n@NgModule({\n  declarations: [\n    ButtonComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ButtonComponent\n  ]\n})\nexport class ButtonModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TaskModule",
            "id": "module-TaskModule-0afb71b2104161257dbd59d83fe50aefe5bf7b5205e177a5a091d180e132d5d5f98b7ce8570affb71841646c45c3dc83eba86555d3f8fecb69d0f13f40ef1682",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/task/task.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport TaskComponent from \"./task.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TaskComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    TaskComponent\r\n  ]\r\n})\r\n\r\nexport class TaskModule {\r\n\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TaskComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TaskComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onPinTask: action('onPinTask'),\r\n  onArchiveTask: action('onArchiveTask'),\r\n}"
            },
            {
                "name": "Archived",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      ...Default.args?.task,\r\n      state: 'TASK_ARCHIVED',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      id: '1',\r\n      title: 'Test Task',\r\n      state: 'TASK_INBOX',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'disabled - соответсвует миксину @include disabled',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium,\r\n    disabled: true\r\n  }\r\n}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'loading - соответсвует миксину @include loading',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium,\r\n    loading: true\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryType>",
                "defaultValue": "{\r\n  title: 'Button',\r\n  component: ButtonComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  render: (args: StoryType) => {\r\n    const {content, ...props} = args;\r\n    return {\r\n      props,\r\n      template: `\r\n        <nm-button\r\n            [theme]=\"theme\"\r\n            [size]=\"size\"\r\n            [singleIcon]=\"singleIcon\"\r\n            [disabled]=\"disabled\"\r\n            [loading]=\"loading\">\r\n          ${content}\r\n        </nm-button>\r\n      `\r\n    };\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskComponent>",
                "defaultValue": "{\r\n  title: 'Task',\r\n  component: TaskComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  render: (args: TaskComponent) => ({\r\n    props: {\r\n      ...args,\r\n      onPinTask: actionsData.onPinTask,\r\n      onArchiveTask: actionsData.onArchiveTask,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "Pinned",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      ...Default.args?.task,\r\n      state: 'TASK_PINNED',\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "SimpleText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'simple text - соответствует миксину @include button($size: medium, $theme: large, $type: default)',\r\n  args: {\r\n    content: 'Простой текст',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
            },
            {
                "name": "SingleIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'single-icon - соответствует миксину @include button($size: medium, $theme: large, $type: single-icon)',\r\n  args: {\r\n    content: `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\"\r\n              d=\"M8 2a1 1 0 0 0-1 1v4H3a1 1 0 0 0 0 2h4v4a1 1 0 1 0 2 0V9h4a1 1 0 1 0 0-2H9V3a1 1 0 0 0-1-1Z\"\r\n              clip-rule=\"evenodd\"/>\r\n      </svg>\r\n    `,\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large,\r\n    singleIcon: true\r\n  }\r\n}"
            },
            {
                "name": "SizeLarge",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'large - соответсвует миксину @include size(large)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
            },
            {
                "name": "SizeMedium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'medium - соответсвует миксину @include size(medium)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "SizeSmall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'small - соответсвует миксину @include size(small)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Small\r\n  }\r\n}"
            },
            {
                "name": "TextWithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'text with icon - соответствует миксину @include button($size: medium, $theme: large, $type: default)',\r\n  args: {\r\n    content: `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\"\r\n              d=\"M8 2a1 1 0 0 0-1 1v4H3a1 1 0 0 0 0 2h4v4a1 1 0 1 0 2 0V9h4a1 1 0 1 0 0-2H9V3a1 1 0 0 0-1-1Z\"\r\n              clip-rule=\"evenodd\"/>\r\n      </svg>\r\n      Кнопка\r\n    `,\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
            },
            {
                "name": "ThemeBlueAccent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'blue-accent - соответсвует миксину @include theme(blue-accent)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.BlueAccent,\r\n    size: ButtonSizeEnum.Medium\r\n\r\n  }\r\n}"
            },
            {
                "name": "ThemeBorderAccent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'border-accent - соответсвует миксину @include theme(border-accent)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.BorderAccent,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemeDanger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'danger - соответсвует миксину @include theme(danger)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Danger,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemeInvertPrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'invert-primary - соответсвует миксину @include theme(invert-primary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.InvertPrimary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemePrimary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'primary - соответсвует миксину @include theme(primary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemeSecondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'secondary - соответсвует миксину @include theme(secondary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Secondary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemeSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'success - соответсвует миксину @include theme(success)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Success,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            },
            {
                "name": "ThemeTertiary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  name: 'tertiary - соответсвует миксину @include theme(tertiary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Tertiary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryType>",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskComponent>",
                "file": "src/app/components/task/task.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 190
            }
        ],
        "enumerations": [
            {
                "name": "ButtonSizeEnum",
                "childs": [
                    {
                        "name": "Large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    },
                    {
                        "name": "Medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "medium"
                    },
                    {
                        "name": "Small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/button/button.enum.ts"
            },
            {
                "name": "ButtonThemeEnum",
                "childs": [
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "primary"
                    },
                    {
                        "name": "Secondary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "secondary"
                    },
                    {
                        "name": "Tertiary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tertiary"
                    },
                    {
                        "name": "BorderAccent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "border-accent"
                    },
                    {
                        "name": "BlueAccent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "blue-accent"
                    },
                    {
                        "name": "Success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "Danger",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "danger"
                    },
                    {
                        "name": "InvertPrimary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "invert-primary"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/button/button.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'disabled - соответсвует миксину @include disabled',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium,\r\n    disabled: true\r\n  }\r\n}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'loading - соответсвует миксину @include loading',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium,\r\n    loading: true\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryType>",
                    "defaultValue": "{\r\n  title: 'Button',\r\n  component: ButtonComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  render: (args: StoryType) => {\r\n    const {content, ...props} = args;\r\n    return {\r\n      props,\r\n      template: `\r\n        <nm-button\r\n            [theme]=\"theme\"\r\n            [size]=\"size\"\r\n            [singleIcon]=\"singleIcon\"\r\n            [disabled]=\"disabled\"\r\n            [loading]=\"loading\">\r\n          ${content}\r\n        </nm-button>\r\n      `\r\n    };\r\n  }\r\n}"
                },
                {
                    "name": "SimpleText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'simple text - соответствует миксину @include button($size: medium, $theme: large, $type: default)',\r\n  args: {\r\n    content: 'Простой текст',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
                },
                {
                    "name": "SingleIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'single-icon - соответствует миксину @include button($size: medium, $theme: large, $type: single-icon)',\r\n  args: {\r\n    content: `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\"\r\n              d=\"M8 2a1 1 0 0 0-1 1v4H3a1 1 0 0 0 0 2h4v4a1 1 0 1 0 2 0V9h4a1 1 0 1 0 0-2H9V3a1 1 0 0 0-1-1Z\"\r\n              clip-rule=\"evenodd\"/>\r\n      </svg>\r\n    `,\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large,\r\n    singleIcon: true\r\n  }\r\n}"
                },
                {
                    "name": "SizeLarge",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'large - соответсвует миксину @include size(large)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
                },
                {
                    "name": "SizeMedium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'medium - соответсвует миксину @include size(medium)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "SizeSmall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'small - соответсвует миксину @include size(small)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Small\r\n  }\r\n}"
                },
                {
                    "name": "TextWithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'text with icon - соответствует миксину @include button($size: medium, $theme: large, $type: default)',\r\n  args: {\r\n    content: `\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\"\r\n              d=\"M8 2a1 1 0 0 0-1 1v4H3a1 1 0 0 0 0 2h4v4a1 1 0 1 0 2 0V9h4a1 1 0 1 0 0-2H9V3a1 1 0 0 0-1-1Z\"\r\n              clip-rule=\"evenodd\"/>\r\n      </svg>\r\n      Кнопка\r\n    `,\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Large\r\n  }\r\n}"
                },
                {
                    "name": "ThemeBlueAccent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'blue-accent - соответсвует миксину @include theme(blue-accent)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.BlueAccent,\r\n    size: ButtonSizeEnum.Medium\r\n\r\n  }\r\n}"
                },
                {
                    "name": "ThemeBorderAccent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'border-accent - соответсвует миксину @include theme(border-accent)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.BorderAccent,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemeDanger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'danger - соответсвует миксину @include theme(danger)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Danger,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemeInvertPrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'invert-primary - соответсвует миксину @include theme(invert-primary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.InvertPrimary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemePrimary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'primary - соответсвует миксину @include theme(primary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Primary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemeSecondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'secondary - соответсвует миксину @include theme(secondary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Secondary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemeSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'success - соответсвует миксину @include theme(success)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Success,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                },
                {
                    "name": "ThemeTertiary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  name: 'tertiary - соответсвует миксину @include theme(tertiary)',\r\n  args: {\r\n    content: 'Кнопка',\r\n    theme: ButtonThemeEnum.Tertiary,\r\n    size: ButtonSizeEnum.Medium\r\n  }\r\n}"
                }
            ],
            "src/app/components/task/task.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onPinTask: action('onPinTask'),\r\n  onArchiveTask: action('onArchiveTask'),\r\n}"
                },
                {
                    "name": "Archived",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      ...Default.args?.task,\r\n      state: 'TASK_ARCHIVED',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      id: '1',\r\n      title: 'Test Task',\r\n      state: 'TASK_INBOX',\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskComponent>",
                    "defaultValue": "{\r\n  title: 'Task',\r\n  component: TaskComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  render: (args: TaskComponent) => ({\r\n    props: {\r\n      ...args,\r\n      onPinTask: actionsData.onPinTask,\r\n      onArchiveTask: actionsData.onArchiveTask,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Pinned",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    task: {\r\n      ...Default.args?.task,\r\n      state: 'TASK_PINNED',\r\n    },\r\n  },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/components/button/button.enum.ts": [
                {
                    "name": "ButtonSizeEnum",
                    "childs": [
                        {
                            "name": "Large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        },
                        {
                            "name": "Medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "medium"
                        },
                        {
                            "name": "Small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/button/button.enum.ts"
                },
                {
                    "name": "ButtonThemeEnum",
                    "childs": [
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "primary"
                        },
                        {
                            "name": "Secondary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "secondary"
                        },
                        {
                            "name": "Tertiary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tertiary"
                        },
                        {
                            "name": "BorderAccent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "border-accent"
                        },
                        {
                            "name": "BlueAccent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "blue-accent"
                        },
                        {
                            "name": "Success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "Danger",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "danger"
                        },
                        {
                            "name": "InvertPrimary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "invert-primary"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/button/button.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryType>",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                },
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 190
                }
            ],
            "src/app/components/task/task.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskComponent>",
                    "file": "src/app/components/task/task.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SimpleText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeLarge",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeMedium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeSmall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextWithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeBlueAccent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeBorderAccent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeDanger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeInvertPrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemePrimary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeSecondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThemeTertiary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Archived",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/task/task.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pinned",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}